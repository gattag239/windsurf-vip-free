帮我使用python开发一个写一个自动注册windsurf账号的程序，项目主目录使用windsurffree目录，使用conda环境名为windsurf_env，虚拟环境已经搭建完毕，
主要功能：
1、创建GUI窗口，增加以下元素：程序大标题：windsurf账号自动注册助手，chrome无头模式开关（checkbox，名称为“是否需要显示创建过程”，默认选中），主邮箱名（默认：jayleehappy，用户还可自行编辑）、邮箱选择下拉框（默认2925.com，选项还有gmail，用户还可自行编辑），邮箱别名（格式为：主邮箱名+数字序号下拉选项<从001到999，用户可自行输入>+邮箱选择下拉框，这3个要素在同一行），拟注册用户账号名预览，拟注册用户密码（默认：asdf1234，增加显示或隐藏密码内容开关），使用说明文本框，程序运行日志输出框（捕捉程序运行实时日志），关闭按钮、下一步按钮。
3、用户点击下一步按钮后，弹窗提示用户正在启动模拟操作，请用户稍事等待并不要移动鼠标键盘，并在主界面日志窗口开始显示运行日志，同时将日志记录到output.log文件中，然后使用模拟操作调用项目目录下\chrome_portable的chrome.exe（chromedriver位置为\chromedriver-win64），打开chrome开始模拟用户操作，流程主要有以下方面：
（1）打开：https://codeium.com/account/register，这个网址，这时有3种情况：
a.网站显示404及其它网络错误，则弹窗提示用户网址无法打开，询问用户是否重试，如果用户选择重试，则回到（1）的判断过程，用户选择否，则返回主界面；
b.网站跳转到了用户信息页面：https://codeium.com/profile，这时需弹窗提示用户：“有账号已登录，需退出账号才能注册新的账号，是否继续？”，如果用户否，则返回主界面，选择是，则在页面内选择退出当前账号，即模拟点击页面的“log out”按钮，等待5秒然后再次打开：https://codeium.com/account/register，再回到（1）的判断过程；
c.网站能够正常显示："Email"、"Password"、"Confirm Pssword"输入框、隐私协议勾选框、“sign up”按钮，则将主界面中的“拟注册用户账号名预览”内容填入Email、“拟注册用户密码”填入"Password"、"Confirm Pssword"输入框，然后勾选隐私协议勾选框，最后点击“sign up”按钮，转入（2）的判断过程。
（2）当模拟点击“sign up”按钮后，一般会有以下情况：
a.网站显示404及其它网络错误，则弹窗提示用户网址无法打开，询问用户是否重试，如果用户选择重试，则回到（1）的判断过程，用户选择否，则返回主界面；
b.页面进入：https://codeium.com/account/onboarding?page=name，需在“First name”和“Last name”输入框中填入随机生成的人员姓名，然后点击“continue”按钮，如果这时网页提示用户名不合法，则再次生成随机姓名进行尝试（最大尝试5次）。
c.网站提示用户已存在，则：
	记录错误信息
	不直接退出Chrome
	提示用户账号已存在，询问用户增加序号重试还是取消注册流程，如果用户选择增加序号重试则自动增加序号，使用新的邮箱地址，从（1）开始重试，用户选择否则返回主界面。
（3）执行完（2）后，一般会有以下情况：
a.网站显示404及其它网络错误，则弹窗提示用户网址无法打开，询问用户是否重试，如果用户选择重试，则回到（1）的判断过程，用户选择否，则返回主界面；
b.页面进入：https://codeium.com/account/onboarding?page=about-user，点击“skip”按钮，然后等待进入下个页面。
（4）执行完（3）后，一般会有以下情况：
a.网站显示404及其它网络错误，则弹窗提示用户网址无法打开，询问用户是否重试，如果用户选择重试，则回到（1）的判断过程，用户选择否，则返回主界面；
b.页面进入：https://codeium.com/account/onboarding?page=source，点击“skip”按钮，然后等待进入下个页面。
（5）执行完（4）后，一般会有以下情况：
a.网站显示404及其它网络错误，则弹窗提示用户网址无法打开，询问用户是否重试，如果用户选择重试，则回到（1）的判断过程，用户选择否，则返回主界面；
b.页面进入：https://codeium.com/account/onboarding?page=source，说明注册已经成功，则弹窗告知用户注册已成功，在弹窗中显示注册的用户名和密码（可复制），用户确认或取消后，注册流程结束，返回主界面。

有关要求：
1、保持代码的整洁和连贯一致性，添加新的功能时先检查原有代码是否已存在相同或相似功能，尽量复用；
2、GUI代码与主程序分离，逻辑代码与主程序分离，每个页面的处理分离，错误处理的逻辑分离，执行注册的总体步骤规划分离，分离的意思就是单独建立一个py文件；
3、日志需捕捉程序运行的全部输出，包括执行的步骤、网站的提示、错误具体内容等，尽量详细，与程序运行同步显示，并记录在output.log文件中，便于后续查看；
4、需正确设置chrome的参数，尽量精简执行，进入和退出程序时，应清理chrome的用户数据；
5、必须保证程序的终止能够随时进行；
6、项目中需参照以下内容生成中文和英文的readme.md：

原理：
1、windsurf、cursor新用户赠送试用，区分是否新用户一般使用的是邮箱
2、谷歌邮箱和2925邮箱支持使用邮箱别名功能，即注册一个主邮箱可以使用多个邮箱别名，但最终邮件仍发送到主邮箱，别名格式一般为：用户名+序号@gmail.com，即用户名+001@gmail.com、用户名+002@gmail.com...
3、把上述2个知识点结合，就是我这个项目的实现原理

实现过程：
我让windsurf写的代码，我自己主要负责提出需求、发现问题，使用了5个账号:)，主要有以下步骤：
1、用户选择邮箱，目前只设置了2种
2、用户输入用户名和密码，并选择邮箱别名
3、剩下的交给项目进行
4、创建新的账号后，windsurf新账号登录
5、试用到期后继续运行本项目，创建新的用户.....

免责声明：